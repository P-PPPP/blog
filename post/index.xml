<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on P_P Blog</title>
    <link>https://blog.peterfile.top/post/</link>
    <description>Recent content in Posts on P_P Blog</description>
    <image>
      <url>https://blog.peterfile.top/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://blog.peterfile.top/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 09 Dec 2021 09:28:42 +0800</lastBuildDate><atom:link href="https://blog.peterfile.top/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RDP 在无显示器的环境下进行gui调试</title>
      <link>https://blog.peterfile.top/post/rdp/</link>
      <pubDate>Thu, 09 Dec 2021 09:28:42 +0800</pubDate>
      
      <guid>https://blog.peterfile.top/post/rdp/</guid>
      <description>需求 在WIndows Server 服务器上进行剪映的自动化服务,需要用到 pyautogui 和 win32api
解决  保持gui链接: 在远程桌面中创建 Close.bat 并输入  %1 mshta vbscript:CreateObject(&amp;#34;Shell.Application&amp;#34;).ShellExecute(&amp;#34;cmd.exe&amp;#34;,&amp;#34;/c %~s0::&amp;#34;,&amp;#34;&amp;#34;,&amp;#34;runas&amp;#34;,1)(window.close)&amp;amp;&amp;amp;exit for /f &amp;#34;skip=1 tokens=3&amp;#34; %%s in (&amp;#39;query user %USERNAME%&amp;#39;) do ( %windir%\System32\tscon.exe %%s /dest:console ) 即可在断开RDP的情况下保持Gui 但是会自动最小化务必在代码中把需要调试的gui应用置于前端,否则无法识别</description>
    </item>
    
    <item>
      <title>无显示器调试</title>
      <link>https://blog.peterfile.top/post/nomonitor/</link>
      <pubDate>Thu, 09 Dec 2021 09:23:45 +0800</pubDate>
      
      <guid>https://blog.peterfile.top/post/nomonitor/</guid>
      <description>思路借助了 这个 其实就是通过 xvfb 在Linux 的 DISPLAY 变量输出到虚拟显示器
sudo apt-get install xserver-xorg-video-dummy sudo apt install xvfb x11vnc apt install lightdm export DISPLAY=:1 Xvfb :1 -screen 0 1920x1080x16 &amp;amp; exec lightdm-session &amp;amp; apt install rdesktop kill
ps -ef|grep X 链接RDP 从某种角度而言,你可以通过rdesktop远程保持Windows Server 的链接,即使没有一个显示器 rdesktop IP -u USERNAME -p PASSWORD -g 1920x1080
当然对于RDP链接的坑,我建议你看这篇文章</description>
    </item>
    
    <item>
      <title>Hangover</title>
      <link>https://blog.peterfile.top/post/hangover/</link>
      <pubDate>Thu, 21 Oct 2021 17:45:33 +0800</pubDate>
      
      <guid>https://blog.peterfile.top/post/hangover/</guid>
      <description>Build Step1 安装必要依赖 sudo apt install gcc-mingw-w64 mingw-w64-common mingw-w64-i686-dev mingw-w64-x86-64-dev binutils-mingw-w64-i686 binutils-mingw-w64-x86-64 gcc-mingw-w64-base gcc-mingw-w64-i686 gcc-mingw-w64-x86-64 #gcc的依赖 sudo apt install libglib2.0-* # Qemu Dependences #sudo apt install clang-6.0 libclang-6.0-dev libclang-common-6.0-dev libclang1-6.0 libclang1-6.0-dbg sudo apt install gcc-mingw-w64 libasound2-dev libpulse-dev libdbus-1-dev libfontconfig-dev libfreetype-dev libgnutls28-dev libjpeg62-turbo-dev libpng-dev libtiff-dev libgl-dev libunwind-dev libxrender libxml2 libxslt libgnutls libjpeg #wine依赖 Step2 编译 编译 Clang5.05 #下载llvm源码 wget http://llvm.org/releases/5.0.2/llvm-5.0.2.src.tar.xz #解压llvm tar xf llvm-5.0.2.src.tar.xz &amp;amp;&amp;amp; mv llvm-5.0.2.src llvm #下载Clang源码 cd llvm/tools wget http://llvm.</description>
    </item>
    
    <item>
      <title>GetPip</title>
      <link>https://blog.peterfile.top/post/getpip/</link>
      <pubDate>Tue, 19 Oct 2021 15:23:47 +0800</pubDate>
      
      <guid>https://blog.peterfile.top/post/getpip/</guid>
      <description>root@OpenWrt:/# curl -sSL https://bootstrap.pypa.io/get-pip.py -o get-pip.py root@OpenWrt:/# python3 get-pip.py --force-reinstall </description>
    </item>
    
    <item>
      <title>Tarpeia|塔培亚</title>
      <link>https://blog.peterfile.top/post/tarpeia/</link>
      <pubDate>Fri, 15 Oct 2021 11:30:44 +0800</pubDate>
      
      <guid>https://blog.peterfile.top/post/tarpeia/</guid>
      <description>闲来无事看罗马史，有一个非常有意思的故事 主人公叫塔培亚
先给个维基百科的link
 In Roman mythology, Tarpeia (/tɑːrˈpiːə/), daughter of the Roman commander Spurius Tarpeius, was a Vestal virgin who betrayed the city of Rome to the Sabines at the time of their women&amp;rsquo;s abduction for what she thought would be a reward of jewelry. She was instead crushed to death and her body cast from the southern cliff of Rome&amp;rsquo;s Capitoline Hill, thereafter called after her the Tarpeian Rock (Rupes Tarpeia).</description>
    </item>
    
    <item>
      <title>为什么是asoul</title>
      <link>https://blog.peterfile.top/post/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AFasoul/</link>
      <pubDate>Thu, 14 Oct 2021 17:39:58 +0800</pubDate>
      
      <guid>https://blog.peterfile.top/post/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AFasoul/</guid>
      <description>我一直都是一个魂啊😇 不得不说，Asoul已经逐步“出圈”，走向了公众视野，有以下几点能看出来
 和KFC，Keep等品牌的合作 获得有关媒体的关注 有一定的粉丝基数和购买力 互联网上的“梗”  不管承认与否，Asoul初衷其实是增强版的爱欲经济学，但是和传统偶像机制又有很大的不同，具体区别其实很多视频都详尽地概括了
但是还有些不一样，Asoul属于是二次元，追这玩意的人心态和真人追星还不一样，从设定来看这玩意还夹杂着成长粉(我也算是这类的)
这也是很多一个魂都是原来拉拉人的原因，从这五个人能看出当年慕斯的影子
除此之外直播形式又吸引了一波陪伴粉，由于工作，外表，性格原因，他们自带“社死”属性，甚至AvA向晚也是社死老嗨。观众很容易就能共情，也很让人动容
知乎上有个问题，问为什么嘉然风评那么差还可以获得如此大的关注和粉丝上涨率。
但是谁能拒绝真心的共融呢？ 附: 向晚 8.13 Love Live！夏日限定回
我跟你们分享一个真实的故事吧 好不好 我有一个嗯 朋友他从小非常的害羞 就有一点 嗯也是有一点 像我们LoveLive里面的一位成员 缪斯里面的一位成员 然后他就是很小就很害羞 就是那种 上课的时候啊 老师叫他回答问题 他都会吱吱呜呜然后说不出话的那种 嗯然后就不说话 然后老就很生气甚至让他出去罚站的 就那种小朋友 然后他后来就觉得不行 这样的性格实在是 不能实现自己的梦想 不能站在众人的面前 他就一直去参加那种比赛 什么很普通的 就那种班级的什么文艺汇演啊 这不算比赛啊 那什么学校里面的歌曲表演啊 什么诗朗诵他全都去参加 一开始参加的时候哇 紧张的腿就抖抖抖抖抖抖抖 你们知道吗就是真的就紧张的 就比方说大家大家好我是向晚就这种 真的很紧张 真的我都哇我真的超紧张 就是我也不知道为什么那么紧张 我干嘛呢我做了什么对啊不是 就是他 他也不知道他为什么这么紧张 后来他就经常去参加比赛 然后一开始从垫底啊 什么海选都进不去 到后来就经常练 经常练还拉着他的好朋友在下面 他在讲台上面这样讲 一直练一直练一直练 后来呢就成功的 在校园歌手的这种舞台上面 虽然也没有到前几名反正就是 成功的站在了决赛的舞台上 </description>
    </item>
    
    <item>
      <title>深澜折腾指北</title>
      <link>https://blog.peterfile.top/post/%E6%B7%B1%E6%BE%9C%E6%8A%98%E8%85%BE%E6%8C%87%E5%8C%97/</link>
      <pubDate>Sat, 09 Oct 2021 09:01:52 +0800</pubDate>
      
      <guid>https://blog.peterfile.top/post/%E6%B7%B1%E6%BE%9C%E6%8A%98%E8%85%BE%E6%8C%87%E5%8C%97/</guid>
      <description>深澜校园网折腾指南 未经允许的获利和违规，本人一概不负责任😇😇😇😇😇 ** 本文章只限于学习交流使用,版权所有:peterpei@coolapk, P_P_P_P_P@bilibil ** 我校校园网登陆器截图
Part1:摆脱官方登陆器 学校的网络在线机制近乎于残酷:每一个账号只支持最多一台设备在线。并且Windows的官方登陆器会限制Windows开启热点，当然，想要绕过限制也是可行的。第一种方法:沙盒(SandBox) 例如在使用SandBoxie时可以绕过系统的检测，愉快的开启热点。但是Windows自带热点共享只支持最多八台设备同时在线。同时你的电脑必须打开。除此之外有时候也会发生DNS解析失败导致的网速变慢，部分图片无法加载的情况。同时，在沙盒环境下运行的校园网拨号客户端可能会出现奇奇怪怪的bug，例如经常掉线或者无法连接。傻瓜式的使用算是最大的优点了。。。第二种方法:第三方客户端 在Github上搜索”深澜”或者是”Srun”，会出现超级多的第三方客户端，这些客户端不一定都是可用的，并且有些项目已经过了很久，并不适用了。安利一个我自己写的客户端: Srun boxies ，用pyqt5+html写的，ui还不错，至少目前我还在维护对于第三方客户端，没有热点共享限制，enjoy。
Part2:自己写个客户端 请不要害怕，客户端是可以自己写的。第一步:我的校园网是什么上网方式? 简单介绍两种上网方法:PPPOE和Portal认证PPPOE:也就是俗称的”拨号”，对于这种方案，只需要搞清楚pppoe的账号密码即可，抓包或者Windows日志都可以查看。Portal:其实是DHCP的一个变种，即设备在连接网络时，交换机(路由)会分配一个IP地址，但是此时还不能联网，你需要web认证，这种好处是全平台通用。并且适合抓包第一点五步:没有漏洞可言 事实上:绕过校园网有很多方法，例如udp53端口，可惜我校直接封掉53，况且用tcp转发udp端口也许会造成堵塞，体验并不好第二步:抓你就完事了 抓包，是的，最简单的方法。抓包方法很多，这里分别介绍手机和电脑的两种方法手机:
抓包软件选择了HttpCanary,酷友的一个作品。打开之后限制抓包软件为登陆器 如图所示
之后开始抓包(模拟正常登陆)，软件会列出所有数据传输
每个包都查看请求和响应，终于我们找到了我们想要的
稍微分析一下:action=login代表登陆操作
username和password都是加密过的，GitHub上面提供了用户名和密码的加密方式(连接)
drop和pop未知，n,type和acid都是静态的，无需修改，但是对于不同学校可能有所不同，IP是本机客户端ip,而mac地址默认为0
请求地址为http://172.16.154.130，头有定制ua(但其实并没有检测ua)方法是POST。
此时我们大致了解了登陆方式:发送登录请求给交换机(路由)即可上网
电脑:
电脑使用了wireshark，也是老牌抓包软件了
同样的模拟登录
结合destination和info可以很轻松看出来最后的HTTP包应该是登陆有关的
追踪此TCP流发现是向http://172.16.154.130:69/传输的数据
发现登陆请求和手机端相似，但是记录了mac，并且取消了IP认证
返回值为login_ok 即表示登陆成功
第三步:复现
打开cmd，用curl命令发送请求包，
 curl -d &amp;quot;action=login&amp;amp;username=%7BSRUN3%7D%0D%0A645%3B67454657&amp;amp;password=7ccAAcc99cc9&amp;amp;drop=0&amp;amp;pop=1&amp;amp;type=2&amp;amp;n=117&amp;amp;mbytes=0&amp;amp;minutes=0&amp;amp;ac_id=1&amp;amp;mac=00%3a2b%3a67%3a5b%3a56%3a2e&amp;quot; http://172.16.154.130/cgi-bin/srun_portal 发送请求
得到
我这个路由器正在登陆，so……当然如果登陆成功应该是login_ok
这个时候，你就可以用各种各样的语言写各种各样的客户端了!
附加步:分析加密方式
加密方式很难猜，但是我们可以用js分析,例如
此时的n也是不同的233 这个应该是用户名加密
当然，你还需要一点运气23333 Part3:白嫖使我快乐
在了解了登陆模式之后，我们还知道默认的校园网密码为”123456″
账号为学号(年级+院系+班级号)
所以我们大可以跑全校校园网密码 一点微小的贡献
原理很简单，我就不po出来了 另类打码 Part4:向更高网速出发 48/8 = 6 mb/s
我校网速限制为丧心病狂的2.5mb/s，在这种情况下，大约三台设备同时连接，整个网(或者说账号)就崩掉了。下载个游戏有时候就要一天。加载缓慢就是经常的事.于是，多拨！
如果你是pppoe模式，恭喜你，随便一搜就有大把教程。我不赘述
但如果你是portal模式，可以看一眼我的教程，也许会对你有所启发
现在，我们有了全校账号，和验证模式
现在我们需要一个路由。我们用的是newwifi3(mt7621芯片，刷啥都可以)刷上了openwrt
也就是说，我们要让路由器模拟我们的登陆操作，并且要多条线路模拟，模拟之后，我们需要多合一</description>
    </item>
    
    <item>
      <title>Aria2配置</title>
      <link>https://blog.peterfile.top/post/aria2%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Sat, 09 Oct 2021 08:59:41 +0800</pubDate>
      
      <guid>https://blog.peterfile.top/post/aria2%E9%85%8D%E7%BD%AE/</guid>
      <description>aria2配置 #aria2c --conf-path=/www/wwwroot/aria2/aria2.conf #用户名 #rpc-user=user #密码 #rpc-passwd=passwd #上面的认证方式不建议使用,建议使用下面的token方式 #设置加密的密钥 #rpc-secret=token #允许rpc enable-rpc=true #允许所有来源, web界面跨域权限需要 rpc-allow-origin-all=true #允许外部访问，false的话只监听本地端口 rpc-listen-all=true #RPC端口, 仅当默认端口被占用时修改 rpc-listen-port=6800 #最大同时下载数(任务数), 路由建议值: 3 max-concurrent-downloads=5 #断点续传 continue=true #同服务器连接数 max-connection-per-server=5 #最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要 min-split-size=10M #单文件最大线程数, 路由建议值: 5 split=10 #下载速度限制 max-overall-download-limit=0 #单文件速度限制 max-download-limit=0 #上传速度限制 max-overall-upload-limit=0 #单文件速度限制 max-upload-limit=0 #断开速度过慢的连接 #lowest-speed-limit=0 #验证用，需要1.16.1之后的release版本 #referer=* #文件保存路径, 默认为当前启动位置 dir=/www/wwwroot/aria2/download #文件缓存, 使用内置的文件缓存, 如果你不相信Linux内核文件缓存和磁盘内置缓存时使用 #disk-cache=0 #另一种Linux文件缓存方式 #enable-mmap=true #文件预分配, 能有效降低文件碎片, 提高磁盘性能. 缺点是预分配时间较长 file-allocation=prealloc ## BT/PT下载相关 ## # 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true follow-torrent=true # 客户端伪装, PT需要 peer-id-prefix=-TR2770- user-agent=Transmission/2.</description>
    </item>
    
    <item>
      <title>Aria2下载代理</title>
      <link>https://blog.peterfile.top/post/aria2%E4%B8%8B%E8%BD%BD%E4%BB%A3%E7%90%86/</link>
      <pubDate>Sat, 09 Oct 2021 08:56:39 +0800</pubDate>
      
      <guid>https://blog.peterfile.top/post/aria2%E4%B8%8B%E8%BD%BD%E4%BB%A3%E7%90%86/</guid>
      <description>Aria2 下载代理踩坑指南 需要在aria2下载时进行代理，于是一开始在v2ray中可以设置代理 Part1:实验 代理设置完成后在Firefox中添加，发现无法正常使用Http代理，而socket5代理正常使用。v2ray的系统代理也无法走ariaPart2:解决 思路:把socket代理转换为http的二级代理sudo apt-get install privoxy sudo gedit /etc/privoxy/config 编辑配置文件，设置代理端口
- listen-address localhost:8118 + #listen-address localhost:8118 forward-socks5t / 127.0.0.1:1080 . //不要忘记&amp;quot;.&amp;quot;，除此之外，端口根据实际更改 listen-address 127.0.0.1:8118 sudo service privoxy restart //重启服务 Part4:验证 1:Firefox验证2：终端验证export http_proxy=&#39;http://127.0.0.1:8118&#39; export https_proxy=$http_proxy curl ip.gs ///203.218.253.29 3：设置代理
`aria2c --conf-path=&amp;quot;/home/kan/downloads/aria2.conf&amp;quot; –http-proxy=&amp;quot;http://127.0.0.1:8118&amp;quot;` </description>
    </item>
    
    <item>
      <title>Rtl8821ce网卡</title>
      <link>https://blog.peterfile.top/post/rtl8821ce/</link>
      <pubDate>Sat, 09 Oct 2021 08:49:39 +0800</pubDate>
      
      <guid>https://blog.peterfile.top/post/rtl8821ce/</guid>
      <description>Rtl8821ce网卡 Linux驱动安装的各种坑 给室友的电脑装上Linux之后，整个系统流畅度提升了不知一点半点但是有个致命的bug:不能用官方的Pcie网卡，虽然外接免驱网卡可以使用，但是对于一个只有两个USB接口的电脑来说，就显得相形见绌了。于是开整。Step1:找驱动 搜索引擎随便搜一下，就有很多，例如 这个 ，但是在安装过程中报错了qwq 根据 修改教程 把
rtl8821ce/os_dep/linux/os_intfs.c
中原有的
@@ -1323,9 +1323,8 @@ unsigned int rtw_classify8021d(struct sk_buff *skb) static u16 rtw_select_queue(struct net_device *dev, struct sk_buff *skb -#if LINUX_VERSION_CODE &amp;gt;= KERNEL_VERSION(3, 13, 0) ,struct net_device *sb_dev -#endif +	,select_queue_fallback_t fallback ) { _adapter	*padapter = rtw_netdev_priv(dev); 改为
@@ -1323,9 +1323,8 @@ unsigned int rtw_classify8021d(struct sk_buff *skb) static u16 rtw_select_queue(struct net_device *dev, struct sk_buff *skb -#if LINUX_VERSION_CODE &amp;gt;= KERNEL_VERSION(3, 13, 0) - ,struct net_device *sb_dev -#endif +	,select_queue_fallback_t fallback ) { _adapter	*padapter = rtw_netdev_priv(dev); 不知道为什么，原贴中说的 “函数实现少了第四个形参” 在我这里并不需要。而且加上会影响编译。 但是在 make sudo make install sudo modprobe -a 8821ce 之后，并没有安装成功</description>
    </item>
    
    <item>
      <title>2Hugo</title>
      <link>https://blog.peterfile.top/post/2hugo/</link>
      <pubDate>Fri, 08 Oct 2021 17:29:27 +0800</pubDate>
      
      <guid>https://blog.peterfile.top/post/2hugo/</guid>
      <description>静态博客  是的，又换成静态博客了.有点逆潮流的趋势，为什么换回了静态呢主要有一下几方面的考量 可以直接部署到Vercel等Severless平台 安全性更强 奥卡姆剃刀原理 服务器的维护麻烦从Asdb的前期开发和维护也能管中窥豹   而且因为前几天Let&amp;rsquo;s Encypt的SSL证书寄了，导致我现在主域名进不去，管理的话也得跳转主域名，十分复杂。所以对Wordpress和某些Linux管理系统印象不好。内容至上才是正确的</description>
    </item>
    
  </channel>
</rss>
