<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>P_P Blog</title>
    <link>/</link>
    <description>Recent content on P_P Blog</description>
    <image>
      <title>P_P Blog</title>
      <url>https://github-readme-stats.vercel.app/api?username=P-PPPP&show_icons=true&theme=tokyonight&hide_title=true&layout=compact.svg</url>
      <link>https://github-readme-stats.vercel.app/api?username=P-PPPP&show_icons=true&theme=tokyonight&hide_title=true&layout=compact.svg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 15 Oct 2022 09:30:04 +0800</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker迁移</title>
      <link>/post/dockertransfer.html</link>
      <pubDate>Sat, 15 Oct 2022 09:30:04 +0800</pubDate>
      
      <guid>/post/dockertransfer.html</guid>
      <description>BusyBox v1.35.0 (2022-10-11 16:33:22 UTC) built-in shell (ash) _________ / /\ _ ___ ___ ___ / LE / \ | | | __| \| __| / DE / \ | |__| _|| |) | _| /________/ LE \ |____|___|___/|___| \ \ DE / \ LE \ / ------------------------------------------- \ DE \ / OpenWrt SNAPSHOT, r5226-f9a69f3d7 \________\/ ------------------------------------------- root@OpenWrt:~# /etc/init.d/dockerd stop root@OpenWrt:~# mkdir /mnt/big/docker root@OpenWrt:~# rsync -av /opt/docker /mnt/big/docker -ash: rsync: not found root@OpenWrt:~# rsync -av /opt/docker /mnt/big/docker sending incremental file list docker/ sent 67 bytes received 20 bytes 174.</description>
    </item>
    
    <item>
      <title>Python_Thread_Target</title>
      <link>/post/python_thread_target.html</link>
      <pubDate>Mon, 19 Sep 2022 22:40:24 +0800</pubDate>
      
      <guid>/post/python_thread_target.html</guid>
      <description>https://blog.csdn.net/weixin_43356308/article/details/114000042</description>
    </item>
    
    <item>
      <title>I Moved :)</title>
      <link>/post/changedomain.html</link>
      <pubDate>Thu, 30 Jun 2022 15:57:42 +0800</pubDate>
      
      <guid>/post/changedomain.html</guid>
      <description>*.peterfile.top -&amp;gt; *.peterpei.xyz Quite expensive but cheap for first year.</description>
    </item>
    
    <item>
      <title>Say Goodbye 2 IE</title>
      <link>/post/byeie.html</link>
      <pubDate>Thu, 16 Jun 2022 18:01:29 +0800</pubDate>
      
      <guid>/post/byeie.html</guid>
      <description>However IE Already Dead long time ago, cause nowhere 4 us to explore anymore.</description>
    </item>
    
    <item>
      <title>崔健-一块红布</title>
      <link>/post/apiceosredmap.html</link>
      <pubDate>Sat, 21 May 2022 23:27:52 +0800</pubDate>
      
      <guid>/post/apiceosredmap.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>Bitcoin:Is that a coin?</title>
      <link>/post/bitcoin-isthatacoin.html</link>
      <pubDate>Wed, 04 May 2022 22:27:46 +0800</pubDate>
      
      <guid>/post/bitcoin-isthatacoin.html</guid>
      <description>So recently,refer to the international surroundings. I decide to try `Bitcoin`. It is not fresh to us as it made its many `15 minutes`.Make many nobody into billionaires. We cannot deny that this mathmatics has been endowed as finacial meanings. The first time i know Bitcoin, or furtherly, Encrypted Coin and Block Chains is in 2019 when i was gradulated from senior high. A Tv series called `Sillicon` (Some Nerd change the world.</description>
    </item>
    
    <item>
      <title>GoFaster</title>
      <link>/post/gofaster.html</link>
      <pubDate>Sat, 16 Apr 2022 22:59:32 +0800</pubDate>
      
      <guid>/post/gofaster.html</guid>
      <description></description>
    </item>
    
    <item>
      <title>修复`Node`出错</title>
      <link>/post/fixnodeinopenwrt.html</link>
      <pubDate>Sat, 16 Apr 2022 22:50:14 +0800</pubDate>
      
      <guid>/post/fixnodeinopenwrt.html</guid>
      <description>重装软路由系统之后发现无法使用网易云的流媒体解锁服务,使用/etc/init.d/unblockneteasemusic info 发现其实是包裹了 UnblockNeteaseMusic 的预编译版本以适应所有平台
输入node 发现报错
# root @ OpenWrt in /usr/share/unblockneteasemusic/core [22:48:04] $ node app.js Error relocating /usr/bin/node: _ZNSt19_Sp_make_shared_tag5_S_eqERKSt9type_info: symbol not found Error relocating /usr/bin/node: _ZNSt19basic_ostringstreamIcSt11char_traitsIcESaIcEEC1Ev: symbol not found Error relocating /usr/bin/node: _ZSt28__throw_bad_array_new_lengthv: symbol not found Error relocating /usr/bin/node: _ZNSt18basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev: symbol not found 推测应该是node执行文件寄了,键入apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/main/ nodejs 修复(bash 貌似也会G 反正一个道理)
想起来之前编译hangeover的时候/bin 和 /usr/bin 的坑
Linux 万物皆文件
$ node -v v16.14.2 </description>
    </item>
    
    <item>
      <title>老无所依</title>
      <link>/post/nocountryforoldmen.html</link>
      <pubDate>Fri, 15 Apr 2022 21:35:20 +0800</pubDate>
      
      <guid>/post/nocountryforoldmen.html</guid>
      <description>BiliBili_Link
另一句有意思的话，是杀人狂安东对路维林的老婆说的，他让女人猜硬币决定她自己能活还是必死，女人很慌乱，说硬币只是硬币，决定事情的还是你。
杀手不高兴，说：这个硬币来到这里，和我来到这里的方式，没有区别的。这话太精彩，科恩兄弟电影里“无所依”的主题背后，就是这句话在作崇。这话的意思是，在世界里，在生活中，人和任何一样渺小的东西一样，走向都是偶然的，这偶然有逻辑，一件事情确有另一件事情的引导，但逻辑不掌握在人手里，掌握在上帝那只偶然的手里。所以科恩兄弟的电影里总是一幅事与愿违的面貌，事情总按照希望的反方向行走，而且走得理直气壮，因为总有必然而不期然的巧合要发生。
埃德警长在电影开头的独白里悠悠怀念着以往的日子，怀念自己也是警察的父辈，那些日子是可以不带枪出警的，但那世界如今不在了，埃德在看到路维林死去之后，和另一个老警察聊天，老警察说：“如果二十年前你说今后会有小年轻染了头发，身体上打许多孔，鼻子上穿个骨头，我绝不能相信的。”埃德无奈：“这些是从轻视坏习惯开始的，当人们开始不再喊‘先生’和‘女士’的时候，世界差不多完了。”原先的世界不断崩塌陷落着，而倾塌中的碎片又不断拼贴连粘成新的世界，塌陷连粘中，时间过去了，人老了，不再有力气去适应新世界，于是老而无所依。埃德以为退休了就有个温柔乡、宁静乡、安详乡可以依靠，结果没有，结果只有个梦，而且梦不长，很快醒了。
电影里点题最明显的一句对白，是埃德警长对路维林的老婆说宰牛的故事，有一个人用枪宰牛，结果飞出去的弹片蹦到牛骨头上弹回来，却伤了自己。路维林找到两百万，却因为两百万赔了性命，安东追杀路维林，没曾想路维林会把自己伤得厉害，也没想到解决路维林老婆之后，会在小镇宁静的小路上碰上一起车祸，他是没有闯红灯的，规则并不管用，这是安东自己说的：假如规则带你到这无路的境地，这规则有什么用？科恩兄弟拍过的这许多电影，说来说去，无非是曲折的偷鸡蚀米，最后连偷鸡的念头一起蚀掉，剩下一具尸身，或者像《冰血暴》里，尸身也进了碎木机，肉沫横飞。
故而，生活不可依靠，规则不可依靠，自己也不可依靠，这世界无可依靠的。无所依的主题，像是经过许多年，终于要从里面透到外面来一样。​</description>
    </item>
    
    <item>
      <title>Chrome_in_Firefox</title>
      <link>/post/chrome_in_firefox.html</link>
      <pubDate>Sat, 12 Mar 2022 21:41:42 +0800</pubDate>
      
      <guid>/post/chrome_in_firefox.html</guid>
      <description>请在Firefox地址栏输入 chrome://branding/content/about-logo.png
很神奇对吧,为什么在Firefox浏览器中出现了Chrome的schma呢?
Chrome ，铬，元素周期表 24 号元素。 镀铬是一种在金属上电镀一层薄薄的铬层的工艺，其往往可以用于装饰或者作为金属的保护层，是一种让金属变得亮闪闪的工艺，很多汽车会用这个工艺制作车窗和车灯周围的装饰条。
当我们在网上冲浪时，看到的网页内容在是在视口（ Viewport ）中的，
视口周围的浏览器用户界面叫什么呢？早期人类就假借了“闪亮的镀铬装饰物”这个意象，把这些装饰物称为“铬”，
所以 Firefox 中有一个chrome://协议用来处理一些和浏览器用户界面相关的工作，Chrome 浏览器则直接用了这个名字，意思可能是“看网页的闪亮用户界面”。
The phrase chrome has been used by Mozilla since long before Google Chrome came on the market. Typically the phrase &amp;ldquo;Chrome&amp;rdquo; referred to all the area around your viewport, but not the viewport itself. Sort of like the chrome plating some cars have around their windscreens or headlights. See here for more details - but no; nothing to do with Google Chrome.</description>
    </item>
    
    <item>
      <title>在Linux上通过Wine使用必剪客户端</title>
      <link>/post/winebcut.html</link>
      <pubDate>Sun, 26 Dec 2021 22:03:15 +0800</pubDate>
      
      <guid>/post/winebcut.html</guid>
      <description>应用方法可预见地宽阔了起来。
剪映和必剪客户端组成分析 两个都使用了ELectron封装,Gpu加速,使用D3d + ffmpeg 作为后端。 对于electron,是基于C++开发的支持nodejs的封装工具.也就是理论上和实际上,这两个应用都能原生支持Linux 在Linux上可以用OpenGl + ffmpeg 作为其后端
必剪移植过程 按照官网安装Wine和Winetricks (Wine &amp;ndash;version 7.0/winetricks latest) 安装 D3dx,.Net,Vs C++依赖 安装 Wine-mono 和 Wine-geeko 下载必剪Windows客户端 尝试使用Wine BCUT.exe 运行安装程序. 启动 错误处理 X Error of failed request: GLXBadFBConfig Major opcode of failed request: 153 (GLX) Minor opcode of failed request: 0 () Serial number of failed request: 228 Current serial number in output stream: 228 原因是Mesa问题,解决:
MESA_GL_VERSION_OVERRIDE=9.9,直接伪造版本通过</description>
    </item>
    
    <item>
      <title>RDP 在无显示器的环境下进行gui调试</title>
      <link>/post/rdp.html</link>
      <pubDate>Thu, 09 Dec 2021 09:28:42 +0800</pubDate>
      
      <guid>/post/rdp.html</guid>
      <description>需求 在WIndows Server 服务器上进行剪映的自动化服务,需要用到 pyautogui 和 win32api
解决 保持gui链接: 在远程桌面中创建 Close.bat 并输入 %1 mshta vbscript:CreateObject(&amp;#34;Shell.Application&amp;#34;).ShellExecute(&amp;#34;cmd.exe&amp;#34;,&amp;#34;/c %~s0 ::&amp;#34;,&amp;#34;&amp;#34;,&amp;#34;runas&amp;#34;,1)(window.close)&amp;amp;&amp;amp;exit for /f &amp;#34;skip=1 tokens=3&amp;#34; %%s in (&amp;#39;query user %USERNAME%&amp;#39;) do ( %windir%\System32\tscon.exe %%s /dest:console ) 即可在断开RDP的情况下保持Gui 但是会自动最小化务必在代码中把需要调试的gui应用置于前端,否则无法识别</description>
    </item>
    
    <item>
      <title>无显示器调试</title>
      <link>/post/nomonitor.html</link>
      <pubDate>Thu, 09 Dec 2021 09:23:45 +0800</pubDate>
      
      <guid>/post/nomonitor.html</guid>
      <description>思路借助了 这个 其实就是通过 xvfb 在Linux 的 DISPLAY 变量输出到虚拟显示器
sudo apt-get install xserver-xorg-video-dummy sudo apt install xvfb x11vnc apt install lightdm export DISPLAY=:1 Xvfb :1 -screen 0 1920x1080x16 &amp;amp; exec lightdm-session &amp;amp; apt install rdesktop kill
ps -ef|grep X 链接RDP 从某种角度而言,你可以通过rdesktop远程保持Windows Server 的链接,即使没有一个显示器 rdesktop IP -u USERNAME -p PASSWORD -g 1920x1080
当然对于RDP链接的坑,我建议你看这篇文章</description>
    </item>
    
    <item>
      <title>Hangover</title>
      <link>/post/hangover.html</link>
      <pubDate>Thu, 21 Oct 2021 17:45:33 +0800</pubDate>
      
      <guid>/post/hangover.html</guid>
      <description>Build Step1 安装必要依赖 sudo apt install gcc-mingw-w64 mingw-w64-common mingw-w64-i686-dev mingw-w64-x86-64-dev binutils-mingw-w64-i686 binutils-mingw-w64-x86-64 gcc-mingw-w64-base gcc-mingw-w64-i686 gcc-mingw-w64-x86-64 #gcc的依赖 sudo apt install libglib2.0-* # Qemu Dependences #sudo apt install clang-6.0 libclang-6.0-dev libclang-common-6.0-dev libclang1-6.0 libclang1-6.0-dbg sudo apt install gcc-mingw-w64 libasound2-dev libpulse-dev libdbus-1-dev libfontconfig-dev libfreetype-dev libgnutls28-dev libjpeg62-turbo-dev libpng-dev libtiff-dev libgl-dev libunwind-dev libxrender libxml2 libxslt libgnutls libjpeg #wine依赖 Step2 编译 编译 Clang5.05 #下载llvm源码 wget http://llvm.org/releases/5.0.2/llvm-5.0.2.src.tar.xz #解压llvm tar xf llvm-5.0.2.src.tar.xz &amp;amp;&amp;amp; mv llvm-5.0.2.src llvm #下载Clang源码 cd llvm/tools wget http://llvm.</description>
    </item>
    
    <item>
      <title>GetPip</title>
      <link>/post/getpip.html</link>
      <pubDate>Tue, 19 Oct 2021 15:23:47 +0800</pubDate>
      
      <guid>/post/getpip.html</guid>
      <description>root@OpenWrt:/# curl -sSL https://bootstrap.pypa.io/get-pip.py -o get-pip.py root@OpenWrt:/# python3 get-pip.py --force-reinstall </description>
    </item>
    
    <item>
      <title>Tarpeia|塔培亚</title>
      <link>/post/tarpeia.html</link>
      <pubDate>Fri, 15 Oct 2021 11:30:44 +0800</pubDate>
      
      <guid>/post/tarpeia.html</guid>
      <description>闲来无事看罗马史，有一个非常有意思的故事 主人公叫塔培亚
先给个维基百科的link
In Roman mythology, Tarpeia (/tɑːrˈpiːə/), daughter of the Roman commander Spurius Tarpeius, was a Vestal virgin who betrayed the city of Rome to the Sabines at the time of their women&amp;rsquo;s abduction for what she thought would be a reward of jewelry. She was instead crushed to death and her body cast from the southern cliff of Rome&amp;rsquo;s Capitoline Hill, thereafter called after her the Tarpeian Rock (Rupes Tarpeia).</description>
    </item>
    
    <item>
      <title>深澜折腾指北</title>
      <link>/post/%E6%B7%B1%E6%BE%9C%E6%8A%98%E8%85%BE%E6%8C%87%E5%8C%97.html</link>
      <pubDate>Sat, 09 Oct 2021 09:01:52 +0800</pubDate>
      
      <guid>/post/%E6%B7%B1%E6%BE%9C%E6%8A%98%E8%85%BE%E6%8C%87%E5%8C%97.html</guid>
      <description>深澜校园网折腾指南 未经允许的获利和违规，本人一概不负责任😇😇😇😇😇 ** 本文章只限于学习交流使用,版权所有:peterpei@coolapk, P_P_P_P_P@bilibil ** 我校校园网登陆器截图
Part1:摆脱官方登陆器 学校的网络在线机制近乎于残酷:每一个账号只支持最多一台设备在线。并且Windows的官方登陆器会限制Windows开启热点，当然，想要绕过限制也是可行的。
第一种方法:沙盒(SandBox) 例如在使用SandBoxie时可以绕过系统的检测，
愉快的开启热点。但是Windows自带热点共享只支持最多八台设备同时在线。同时你的电脑必须打开。
除此之外有时候也会发生DNS解析失败导致的网速变慢，部分图片无法加载的情况。同时，在沙盒环境下运行的校园网拨号客户端可能会出现奇奇怪怪的bug，例如经常掉线或者无法连接。傻瓜式的使用算是最大的优点了。。。
第二种方法:第三方客户端 在Github上搜索”深澜”或者是”Srun”，会出现超级多的第三方客户端，这些客户端不一定都是可用的，并且有些项目已经过了很久，并不适用了。
安利一个我自己写的客户端: Srun boxies ，用pyqt5+html写的，ui还不错，至少目前我还在维护 对于第三方客户端，没有热点共享限制，enjoy。
Part2:自己写个客户端 请不要害怕，客户端是可以自己写的。
第一步:我的校园网是什么上网方式? 简单介绍两种上网方法:PPPOE和Portal认证
PPPOE:也就是俗称的”拨号”，对于这种方案，只需要搞清楚pppoe的账号密码即可，抓包或者Windows日志都可以查看。
Portal:其实是DHCP的一个变种，即设备在连接网络时，交换机(路由)会分配一个IP地址，但是此时还不能联网，你需要web认证，这种好处是全平台通用。并且适合抓包
第一点五步:没有漏洞可言 事实上:绕过校园网有很多方法，例如udp53端口，可惜我校直接封掉53，况且用tcp转发udp端口也许会造成堵塞，体验并不好
第二步:抓你就完事了 抓包，是的，最简单的方法。
抓包方法很多，这里分别介绍手机和电脑的两种方法
手机:
抓包软件选择了HttpCanary,酷友的一个作品。打开之后限制抓包软件为登陆器 如图所示
之后开始抓包(模拟正常登陆)，软件会列出所有数据传输
每个包都查看请求和响应，终于我们找到了我们想要的
稍微分析一下:action=login代表登陆操作
username和password都是加密过的，GitHub上面提供了用户名和密码的加密方式(连接)
drop和pop未知，n,type和acid都是静态的，无需修改，但是对于不同学校可能有所不同，IP是本机客户端ip,而mac地址默认为0
请求地址为http://172.16.154.130，头有定制ua(但其实并没有检测ua)方法是POST。
此时我们大致了解了登陆方式:发送登录请求给交换机(路由)即可上网
电脑:
电脑使用了wireshark，也是老牌抓包软件了
同样的模拟登录
结合destination和info可以很轻松看出来最后的HTTP包应该是登陆有关的
追踪此TCP流发现是向http://172.16.154.130:69/传输的数据
发现登陆请求和手机端相似，但是记录了mac，并且取消了IP认证
返回值为login_ok 即表示登陆成功
第三步:复现
打开cmd，用curl命令发送请求包，
curl -d &amp;#34;action=login&amp;amp;username=%7BSRUN3%7D%0D%0A645%3B67454657&amp;amp;password=7ccAAcc99cc9&amp;amp;drop=0&amp;amp;pop=1&amp;amp;type=2&amp;amp;n=117&amp;amp;mbytes=0&amp;amp;minutes=0&amp;amp;ac_id=1&amp;amp;mac=00%3a2b%3a67%3a5b%3a56%3a2e&amp;#34; http://172.16.154.130/cgi-bin/srun_portal 发送请求
得到
我这个路由器正在登陆，so……当然如果登陆成功应该是login_ok
这个时候，你就可以用各种各样的语言写各种各样的客户端了!
附加步:分析加密方式
加密方式很难猜，但是我们可以用js分析,例如
此时的n也是不同的233 这个应该是用户名加密
当然，你还需要一点运气23333 Part3:白嫖使我快乐
在了解了登陆模式之后，我们还知道默认的校园网密码为”123456″
账号为学号(年级+院系+班级号)
所以我们大可以跑全校校园网密码 一点微小的贡献
原理很简单，我就不po出来了 另类打码 Part4:向更高网速出发 48/8 = 6 mb/s</description>
    </item>
    
    <item>
      <title>Aria2配置</title>
      <link>/post/aria2%E9%85%8D%E7%BD%AE.html</link>
      <pubDate>Sat, 09 Oct 2021 08:59:41 +0800</pubDate>
      
      <guid>/post/aria2%E9%85%8D%E7%BD%AE.html</guid>
      <description>aria2配置 #aria2c --conf-path=/www/wwwroot/aria2/aria2.conf #用户名 #rpc-user=user #密码 #rpc-passwd=passwd #上面的认证方式不建议使用,建议使用下面的token方式 #设置加密的密钥 #rpc-secret=token #允许rpc enable-rpc=true #允许所有来源, web界面跨域权限需要 rpc-allow-origin-all=true #允许外部访问，false的话只监听本地端口 rpc-listen-all=true #RPC端口, 仅当默认端口被占用时修改 rpc-listen-port=6800 #最大同时下载数(任务数), 路由建议值: 3 max-concurrent-downloads=5 #断点续传 continue=true #同服务器连接数 max-connection-per-server=5 #最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要 min-split-size=10M #单文件最大线程数, 路由建议值: 5 split=10 #下载速度限制 max-overall-download-limit=0 #单文件速度限制 max-download-limit=0 #上传速度限制 max-overall-upload-limit=0 #单文件速度限制 max-upload-limit=0 #断开速度过慢的连接 #lowest-speed-limit=0 #验证用，需要1.16.1之后的release版本 #referer=* #文件保存路径, 默认为当前启动位置 dir=/www/wwwroot/aria2/download #文件缓存, 使用内置的文件缓存, 如果你不相信Linux内核文件缓存和磁盘内置缓存时使用 #disk-cache=0 #另一种Linux文件缓存方式 #enable-mmap=true #文件预分配, 能有效降低文件碎片, 提高磁盘性能. 缺点是预分配时间较长 file-allocation=prealloc ## BT/PT下载相关 ## # 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true follow-torrent=true # 客户端伪装, PT需要 peer-id-prefix=-TR2770- user-agent=Transmission/2.</description>
    </item>
    
    <item>
      <title>Aria2下载代理</title>
      <link>/post/aria2%E4%B8%8B%E8%BD%BD%E4%BB%A3%E7%90%86.html</link>
      <pubDate>Sat, 09 Oct 2021 08:56:39 +0800</pubDate>
      
      <guid>/post/aria2%E4%B8%8B%E8%BD%BD%E4%BB%A3%E7%90%86.html</guid>
      <description>Aria2 下载代理踩坑指南 需要在aria2下载时进行代理，于是一开始在v2ray中可以设置代理 Part1:实验 代理设置完成后在Firefox中添加，发现无法正常使用Http代理，而socket5代理正常使用。
v2ray的系统代理也无法走aria
Part2:解决 思路:把socket代理转换为http的二级代理
sudo apt-get install privoxy sudo gedit /etc/privoxy/config 编辑配置文件，设置代理端口
- listen-address localhost:8118 + #listen-address localhost:8118 forward-socks5t / 127.0.0.1:1080 . //不要忘记&amp;#34;.&amp;#34;，除此之外，端口根据实际更改 listen-address 127.0.0.1:8118 sudo service privoxy restart //重启服务 Part4:验证 1:Firefox验证
2：终端验证
export http_proxy=&amp;#39;http://127.0.0.1:8118&amp;#39; export https_proxy=$http_proxy curl ip.gs ///203.218.253.29 3：设置代理
`aria2c --conf-path=&amp;quot;/home/kan/downloads/aria2.conf&amp;quot; –http-proxy=&amp;quot;http://127.0.0.1:8118&amp;quot;` </description>
    </item>
    
    <item>
      <title>Rtl8821ce网卡</title>
      <link>/post/rtl8821ce.html</link>
      <pubDate>Sat, 09 Oct 2021 08:49:39 +0800</pubDate>
      
      <guid>/post/rtl8821ce.html</guid>
      <description>Rtl8821ce网卡 Linux驱动安装的各种坑 给室友的电脑装上Linux之后，整个系统流畅度提升了不知一点半点
但是有个致命的bug:不能用官方的Pcie网卡，虽然外接免驱网卡可以使用，但是对于一个只有两个USB接口的电脑来说，就显得相形见绌了。于是开整。
Step1:找驱动 搜索引擎随便搜一下，就有很多，例如 这个 ，但是在安装过程中报错了qwq 根据 修改教程 把
rtl8821ce/os_dep/linux/os_intfs.c
中原有的
@@ -1323,9 +1323,8 @@ unsigned int rtw_classify8021d(struct sk_buff *skb) static u16 rtw_select_queue(struct net_device *dev, struct sk_buff *skb -#if LINUX_VERSION_CODE &amp;gt;= KERNEL_VERSION(3, 13, 0) ,struct net_device *sb_dev -#endif +	,select_queue_fallback_t fallback ) { _adapter	*padapter = rtw_netdev_priv(dev); 改为
@@ -1323,9 +1323,8 @@ unsigned int rtw_classify8021d(struct sk_buff *skb) static u16 rtw_select_queue(struct net_device *dev, struct sk_buff *skb -#if LINUX_VERSION_CODE &amp;gt;= KERNEL_VERSION(3, 13, 0) - ,struct net_device *sb_dev -#endif +	,select_queue_fallback_t fallback ) { _adapter	*padapter = rtw_netdev_priv(dev); 不知道为什么，原贴中说的 “函数实现少了第四个形参” 在我这里并不需要。而且加上会影响编译。 但是在 make sudo make install sudo modprobe -a 8821ce 之后，并没有安装成功</description>
    </item>
    
    <item>
      <title>2Hugo</title>
      <link>/post/2hugo.html</link>
      <pubDate>Fri, 08 Oct 2021 17:29:27 +0800</pubDate>
      
      <guid>/post/2hugo.html</guid>
      <description>静态博客 是的，又换成静态博客了.有点逆潮流的趋势，为什么换回了静态呢 主要有一下几方面的考量
可以直接部署到Vercel等Severless平台 安全性更强 奥卡姆剃刀原理 服务器的维护麻烦 从Asdb的前期开发和维护也能管中窥豹 而且因为前几天Let&amp;rsquo;s Encypt的SSL证书寄了，导致我现在主域名进不去，管理的话也得跳转主域名，十分复杂。所以对Wordpress和某些Linux管理系统印象不好。
内容至上才是正确的</description>
    </item>
    
    <item>
      <title>About</title>
      <link>/about.html</link>
      <pubDate>Fri, 08 Oct 2021 17:27:54 +0800</pubDate>
      
      <guid>/about.html</guid>
      <description>About Me Hi There!👋
Intp - A
Depoly Info Powered By Hugo.
Followed CC 4.0 BY-SA License </description>
    </item>
    
    <item>
      <title>😍</title>
      <link>/hobby.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/hobby.html</guid>
      <description>😍</description>
    </item>
    
    
  </channel>
</rss>
